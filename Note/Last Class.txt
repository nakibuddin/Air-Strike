/*
	author: S. M. Shahriar Nirjon
	last modified: August 8, 2008
*/
# include "iGraphics.h"

int ball_x, ball_y;
int dx, dy;

/* 
	function iDraw() is called again and again by the system.
*/

int smurfX=200, smurfY=200;
int timerIndex1;
int timerIndex2;
int smurfDirction = -1;
int score = 0;
int rectx, recty = 0;
bool isOnRect = false;

//bool showOthers = false;
void DrawBall()
{
	iSetColor(255, 100, 10);
	iFilledCircle(ball_x, ball_y, 3);
}
void iDraw()
{
	//place your drawing codes here	



	iClear();

	DrawBall();
	
	//iShowBMP(smurfX,smurfY,"smurf.bmp");
	
	iFilledRectangle(rectx, recty, 20,20);
	
	iSetColor(255, 255, 255);
	//iText(10, 10, "Press p for pause, r for resume, END for exit.");
	
		char text[100];
		sprintf(text, "The score is %d" , score);
	//strcpy(text, "This is a testing Txt");
	iText(200,300, text);

	if(isOnRect)
	{

		iText(100,100, "Mouse is on the rectangle");

	}


	
}

/* 
	function iMouseMove() is called when the user presses and drags the mouse.
	(mx, my) is the position where the mouse pointer is.
*/
void iMouseMove(int mx, int my)
{
	//place your codes here
smurfX = mx;
		smurfY = my;
}

void iPassiveMouseMove(int mx,int my)
{
	//place your code here
	
 if(mx== 2){}        /*Something to do with mx*/
 else if(my== 2){}   /*Something to do with my*/
 

 if(mx >  rectx && mx <  rectx  + 20 && my >  recty && my <  recty  + 20 )
 {
	isOnRect = true;
 }
}

/* 
	function iMouse() is called when the user presses/releases the mouse.
	(mx, my) is the position where the mouse pointer is.
*/
void iMouse(int button, int state, int mx, int my)
{
	if(button == GLUT_LEFT_BUTTON && state == GLUT_DOWN)
	{
		
		//place your codes here	
	}
	if(button == GLUT_RIGHT_BUTTON && state == GLUT_DOWN)
	{
		smurfX = mx;
		smurfY = my;
		//place your codes here	
	}
}

/*
	function iKeyboard() is called whenever the user hits a key in keyboard.
	key- holds the ASCII value of the key pressed. 
*/
void iKeyboard(unsigned char key)
{
	if(key == 'p')
	{
		//do something with 'q'
		iPauseTimer(timerIndex1);
		iPauseTimer(timerIndex2);
	}
	if(key == 'r')
	{
		iResumeTimer(timerIndex2);
	}
	//place your codes for other keys here
}

/*
	function iSpecialKeyboard() is called whenver user hits special keys like-
	function keys, home, end, pg up, pg down, arraows etc. you have to use 
	appropriate constants to detect them. A list is:
	GLUT_KEY_F1, GLUT_KEY_F2, GLUT_KEY_F3, GLUT_KEY_F4, GLUT_KEY_F5, GLUT_KEY_F6, 
	GLUT_KEY_F7, GLUT_KEY_F8, GLUT_KEY_F9, GLUT_KEY_F10, GLUT_KEY_F11, GLUT_KEY_F12, 
	GLUT_KEY_LEFT, GLUT_KEY_UP, GLUT_KEY_RIGHT, GLUT_KEY_DOWN, GLUT_KEY_PAGE UP, 
	GLUT_KEY_PAGE DOWN, GLUT_KEY_HOME, GLUT_KEY_END, GLUT_KEY_INSERT 
*/
void iSpecialKeyboard(unsigned char key)
{

	if(key == GLUT_KEY_END)
	{
		exit(0);	
	}

	if(key == GLUT_KEY_DOWN)
	{
		smurfY--;
	}

	if(key == GLUT_KEY_UP)
	{
		smurfY++;
	}

	if(key == GLUT_KEY_LEFT)
	{
		rectx-=10;
	}

	if(key == GLUT_KEY_RIGHT)
	{
		rectx+=10;
	}
	//place your codes for other keys here
}

 void ChangeSmurfLocation()
 {
	 smurfY =smurfY + smurfDirction;

	 if(smurfY < 0 ||smurfY >400-130)
	 {
	 smurfDirction = smurfDirction *-1;
	 }

	 if( ball_x > rectx  && ball_x < rectx + 20 &&
		 ball_y > recty  && ball_y < recty+ 20)
	 {
		 score++;
	 }

	 
	 

	
 }
void ballChange(){
	ball_x += dx;
	ball_y += dy;

	if(ball_x > 400 || ball_x < 0)dx = -dx;
	if(ball_y > 400 || ball_y < 0)dy = -dy;


}

//void ShowOthers()
//{
//	showOthers = true;
//}

int main()
{
	//place your own initialization codes here. 
	timerIndex1 = iSetTimer(30, ballChange);
	//iSetTimer(2000,ShowOthers);
	dx = 5;
	dy = 7;
	timerIndex2 = iSetTimer(20,ChangeSmurfLocation);
	iInitialize(400, 400, "BallDemo");
	return 0;
}	